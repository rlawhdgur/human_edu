package com.human.springboot;

import java.util.ArrayList;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import jakarta.servlet.http.HttpServletRequest;

@Controller
public class MyController {

	@Autowired
	private empDAO emp;
	
//	@RequestMapping("/")
//	public String home(Model model) {
//		ArrayList<EmpDTO> edto = emp.list();
//		model.addAttribute("worker", edto);
////		for(int i=0; i<edto.size(); i++) {
////			System.out.println(edto.get(i).getEmp_name());
////		}
//		return "home";
//	}
	
	@RequestMapping("/")
	public String home(Model model) {
		ArrayList<EmpDTO> edto = emp.list();
		model.addAttribute("worker", edto);
//		for(int i=0; i<edto.size(); i++) {
//			System.out.println(edto.get(i).getEmp_name());
//		}
		return "home";
	}
	
	@RequestMapping("/roomtype")
	public String getList(Model model) {
		ArrayList<RoomtypeDTO> rdto = emp.listRoomtype();
		model.addAttribute("rt", rdto);
		
		return "roomtype";
	}
	
	@RequestMapping("/department")
	public String getDepartmentsList(Model model) {
		ArrayList<DepartmentsDTO> ddto = emp.listDepartments();
		model.addAttribute("dn", ddto);
		
		return "department";
	}
	
//	@RequestMapping("/insertRT_form")
//	public String doAddRoomType() {
//		
//		return "insertRT_form";
//	}
//	
//	@RequestMapping("/insertRT")
//	public String doInsertRT(HttpServletRequest req, Model model) {
//		String typename = req.getParameter("typename");
//		emp.insertRoomType(typename);
//		
//		return "redirect:/roomtype";
//	}
	
	@RequestMapping("/insertRI_form")
	public String deAddRoomInfo() {
		
		return "insertRI_form";
	}
	
	@RequestMapping("/insertRI")
	public String deAddRI(HttpServletRequest req, Model model) {
		String name = req.getParameter("name");
		String type = req.getParameter("type");
		String howmany = req.getParameter("howmany");
		String howmuch = req.getParameter("howmuch");
		emp.insertRoomInfo(name, Integer.parseInt(type), Integer.parseInt(howmany), 
							Integer.parseInt(howmuch));
		
		return "redirect:/insertRI_form";
	}
	
	@RequestMapping("/controlRoomType")
	public String doControlRoomType(HttpServletRequest req) {
		if(req.getParameter("optype").equals("delete")) {
			int typenum = Integer.parseInt(req.getParameter("typenum"));
			emp.deleteRoomType(typenum);
		}
		else if(req.getParameter("optype").equals("insert")) {
			String typename = req.getParameter("typename");
			emp.insertRoomType(typename);
		}
		else if(req.getParameter("optype").equals("update")) {
			String typename = req.getParameter("typename");
			int typenum = Integer.parseInt(req.getParameter("typenum"));
			emp.updateRoomType(typename, typenum);
		}
		
		return "redirect:/roomtype";
	}
	
	@RequestMapping("/roominfo")
	public String doRoomInfo(Model model) {
		// select Room Info
		
		ArrayList<RoomInfoDTO> ridto = emp.listRoomInfo();
		model.addAttribute("ri", ridto);
		ArrayList<RoomtypeDTO> rdto = emp.listRoomtype();
		model.addAttribute("rt", rdto);
		
		return "roominfo";
	}
	
	@RequestMapping ("/controlRoomInfo") 
	public String doControlRoomInfo(HttpServletRequest req) {
		// insert/ update /delete Room Info
		
		if(req.getParameter("optype").equals("delete")) {
//			int roomNum = Integer.parseInt(req.getParameter("roomnum"));
			String roomNum = req.getParameter("roomNum");
//			System.out.println(roomNum);
			emp.deleteRoomInfo(roomNum);
		}
		else if(req.getParameter("optype").equals("insert")) {
			String roomName = req.getParameter("roomName");
			String type = req.getParameter("type");
			String roomHowmany = req.getParameter("roomHowmany");
			String roomHowmuch = req.getParameter("roomHowmuch");
			emp.insertRoomInfo(roomName, Integer.parseInt(type), Integer.parseInt(roomHowmany), 
								Integer.parseInt(roomHowmuch));
		}
		else if(req.getParameter("optype").equals("update")) {
//			String roomNum = req.getParameter("roomNum");
//			String roomName = req.getParameter("roomName");
//			int type = Integer.parseInt(req.getParameter("type"));
//			int roomHowmany = Integer.parseInt(req.getParameter("roomHowmany"));
//			int roomHowmuch = Integer.parseInt(req.getParameter("roomHowmuch"));
//			emp.updateRoomInfo(roomNum, roomName, type, roomHowmany, roomHowmuch);
			emp.updateRoomInfo(req.getParameter("roomNum"),
								req.getParameter("roomName"), 
								Integer.parseInt(req.getParameter("type")), 
								Integer.parseInt(req.getParameter("roomHowmany")), 
								Integer.parseInt(req.getParameter("roomHowmuch")));
			
		}
		
		return "redirect:/roominfo";
	}
	
	@RequestMapping("/ajaxtext")
	public String doAjaxTest() {
		
		return "ajax";
	}
	
	@RequestMapping("/doPlus")
	@ResponseBody
	public String doPlus(HttpServletRequest req) {
//		System.out.println("doPlus called");
		int one = Integer.parseInt(req.getParameter("first"));
		int two = Integer.parseInt(req.getParameter("second"));
		int result = one + two;
		
		return Integer.valueOf(result).toString();
	}
	
	@RequestMapping("/empList")
	public String doEmpList() {
		
		return "EmpList";
	}
	
	@RequestMapping("/getEmpList")
	@ResponseBody
	public String doGetEmpList() {
		ArrayList<EmpDTO> edto = emp.list();
		
		JSONArray ja = new JSONArray();
		for(int i=0; i<edto.size(); i++) {
			JSONObject jo = new JSONObject();
			jo.put("eid", edto.get(i).getEmployee_id());
			jo.put("emp_name", edto.get(i).getEmp_name());
			jo.put("salary", edto.get(i).getSalary());
			jo.put("m_name", edto.get(i).getManager_name());
			ja.add(jo);
		}
		
		return ja.toString();
	}
	
	@RequestMapping("/xroomtype")
	public String viewRoomType() {
//		ArrayList<RoomtypeDTO> rdto = emp.listRoomtype();
//		model.addAttribute("rt", rdto);
		
		return "ajax_roomtype";
	}
	
	@RequestMapping("/getRoomType")
	@ResponseBody
	public String doGerRoomType() {
		ArrayList<RoomtypeDTO> rdto = emp.listRoomtype();
		
		JSONArray ja = new JSONArray();
		for(int i=0; i<rdto.size(); i++) {
			JSONObject jo = new JSONObject();
			jo.put("typenum", rdto.get(i).getTypenum());
			jo.put("typename", rdto.get(i).getTypename());
			ja.add(jo);
		}
		return ja.toString();
	}
	
	@RequestMapping("/cudRoomType")
	@ResponseBody
	public String doCudRoomType(HttpServletRequest req) {
		if(req.getParameter("optype").equals("delete")) {
			int typenum = Integer.parseInt(req.getParameter("typenum"));
			emp.deleteRoomType(typenum);
		}
		else if(req.getParameter("optype").equals("insert")) {
			String typename = req.getParameter("typename");
			emp.insertRoomType(typename);
		}
		else if(req.getParameter("optype").equals("update")) {
			String typename = req.getParameter("typename");
			int typenum = Integer.parseInt(req.getParameter("typenum"));
			emp.updateRoomType(typename, typenum);
		}
		
		return "OK";	// dummy data
	}
	
	@RequestMapping("/getRoomInfo")
	@ResponseBody
	public String doGetRoomInfo() {
		return "";
	}
	
	@RequestMapping("/cudRoomInfo")
	@ResponseBody
	public String doCudRoomInfo() {
		return "";
	}
	
}
